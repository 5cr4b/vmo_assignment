name: Security Scan Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PYTHON_VERSION: '3.10'
  TRIVY_SEVERITY: 'CRITICAL,HIGH,MEDIUM'
  TRIVY_EXIT_CODE: '1'
  TRIVY_SKIP_FILES: ''
  TRIVY_SKIP_DIRS: ''


jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        image:
          - name: 'golang'
            tag: '1.12-alpine'             
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner for Ubuntu
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ matrix.image.name }}:${{ matrix.image.tag }}'
          format: 'sarif'
          output: 'trivy-results-${{ matrix.image.name }}.sarif'
          severity: ${{ env.TRIVY_SEVERITY }}
          exit-code: ${{ env.TRIVY_EXIT_CODE }}
          skip-files: ${{ env.TRIVY_SKIP_FILES }}
          skip-dirs: ${{ env.TRIVY_SKIP_DIRS }}
          ignore-unfixed: true
          vuln-type: 'os,library'
        continue-on-error: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.image.name }}.sarif'
          category: 'trivy-${{ matrix.image.name }}'

      # - name: Upload analysis report
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: security-analysis-report
      #     path: reports/
      #     retention-days: 30

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: .

      - name: Unit Tests
        run: |
          python -m pytest tests/test_sarif.py
        working-directory: .
        continue-on-error: true

      - name: Generate scan results for ${{ matrix.image.name }}
        run: |
          python sarif_analyzer.py trivy-results-${{ matrix.image.name }}.sarif
        working-directory: .

  notify:
    name: Notify
    needs: security-scan
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Send notification
        run: |
          echo "Send notification"
        working-directory: .
